import{I as e,z as t,r as s,g as o,K as a,v as n,e as l,x as i,_ as c,S as r,c as d,w as u,D as g,s as p,a as f,L as m,h,b as T,d as y,n as k,M as _,i as x,j as I,o as b,k as v,l as w,m as D,E as C,N as L,t as S,G as O,p as P,F as A,q as R,u as $,O as F}from"./index-CKATG7UM.js";function E(){const e={timestamp:(new Date).toISOString(),storage:{},auth:{},api:{},issues:[],recommendations:[]};try{e.storage={token:o("token"),refreshToken:o("refreshToken"),userInfo:o("userInfo"),isLoggedIn:o("isLoggedIn"),loginTime:o("loginTime")},e.auth={isLoggedInCheck:a(),hasToken:!!e.storage.token,hasRefreshToken:!!e.storage.refreshToken,hasUserInfo:!!e.storage.userInfo,tokenLength:e.storage.token?e.storage.token.length:0,tokenPreview:e.storage.token?e.storage.token.substring(0,20)+"...":null};const s=n();if(e.api={baseUrl:s.BASE_URL,timeout:s.TIMEOUT,historyUrl:`${s.BASE_URL}/documents/history`},e.storage.isLoggedIn||(e.issues.push("用户未登录状态 (isLoggedIn = false)"),e.recommendations.push("需要重新登录")),e.storage.token||(e.issues.push("缺少JWT Token"),e.recommendations.push("检查登录流程，确保token正确保存")),e.storage.isLoggedIn&&!e.storage.token&&(e.issues.push("登录状态与token不一致"),e.recommendations.push("清理认证状态并重新登录")),e.storage.token&&e.storage.token.length<50&&(e.issues.push("Token长度异常，可能不是有效的JWT"),e.recommendations.push("检查登录API响应格式")),e.storage.userInfo||(e.issues.push("用户信息缺失"),e.recommendations.push("检查登录时用户信息保存")),e.storage.token)try{3!==e.storage.token.split(".").length&&(e.issues.push("Token格式不正确，不是标准JWT格式"),e.recommendations.push("检查后端返回的token格式"))}catch(t){e.issues.push("Token解析失败")}if(e.storage.loginTime){const t=new Date(e.storage.loginTime),s=(new Date-t)/6e4;e.auth.loginTimeAgo=Math.round(s),s>60&&(e.issues.push(`Token可能已过期 (登录于${Math.round(s)}分钟前)`),e.recommendations.push("尝试刷新token或重新登录"))}}catch(t){e.issues.push(`诊断过程出错: ${t.message}`)}return e}const M=c({components:{Sidebar:r},data:()=>({records:[],isLoading:!0,filterDocumentTypeIndex:0,filterStatusIndex:0,documentTypeOptions:[{value:"",label:"全部类型"},{value:"fund_contract",label:"基金合同"},{value:"custody_agreement",label:"托管协议"},{value:"prospectus",label:"招募说明书"}],statusOptions:[{value:"",label:"全部状态"},{value:"completed",label:"已完成"},{value:"processing",label:"处理中"},{value:"failed",label:"失败"}],pagination:{page:1,pageSize:20,total:0,totalPages:0},deleteOperations:{count:0,lastDeleteTime:0,maxDeletesPerMinute:3}}),methods:{async loadHistory(){this.isLoading=!0;try{console.log("🔍 开始认证诊断...");if(function(){const e=E();return console.log("🔍 ===== 认证状态诊断报告 ====="),console.log("🕐 诊断时间:",e.timestamp),console.log(""),console.log("📦 本地存储状态:"),console.log("  - Token:",e.storage.token?`存在 (${e.auth.tokenLength}字符)`:"不存在"),console.log("  - RefreshToken:",e.storage.refreshToken?"存在":"不存在"),console.log("  - 登录状态:",e.storage.isLoggedIn),console.log("  - 用户信息:",e.storage.userInfo?"存在":"不存在"),console.log("  - 登录时间:",e.storage.loginTime||"未知"),console.log(""),console.log("🔐 认证检查结果:"),console.log("  - isLoggedIn():",e.auth.isLoggedInCheck),console.log("  - 登录时间差:",e.auth.loginTimeAgo?`${e.auth.loginTimeAgo}分钟前`:"未知"),console.log("  - Token预览:",e.auth.tokenPreview||"无"),console.log(""),console.log("🌐 API配置:"),console.log("  - 基础URL:",e.api.baseUrl),console.log("  - 历史API:",e.api.historyUrl),console.log(""),e.issues.length>0&&(console.log("❌ 发现问题:"),e.issues.forEach((e,t)=>{console.log(`  ${t+1}. ${e}`)}),console.log("")),e.recommendations.length>0&&(console.log("💡 建议操作:"),e.recommendations.forEach((e,t)=>{console.log(`  ${t+1}. ${e}`)})),console.log("================================"),e}().issues.length>0){console.warn("⚠️ 发现认证问题，尝试修复...");const o=function(){console.log("🔧 尝试修复认证问题...");const o=E();return o.storage.isLoggedIn&&!o.storage.token?(console.log("🧹 清理不一致的登录状态..."),e("isLoggedIn"),e("userInfo"),e("loginTime"),t({title:"认证状态异常",content:"检测到认证状态不一致，已清理。请重新登录。",showCancel:!1,confirmText:"去登录",success:()=>{s({url:"/pages/login/login"})}}),!0):o.auth.loginTimeAgo&&o.auth.loginTimeAgo>60?(console.log("🕐 清理过期认证信息..."),e("token"),e("refreshToken"),e("isLoggedIn"),e("userInfo"),e("loginTime"),t({title:"登录已过期",content:"您的登录已过期，请重新登录。",showCancel:!1,confirmText:"去登录",success:()=>{s({url:"/pages/login/login"})}}),!0):(console.log("✅ 未发现可自动修复的问题"),!1)}();if(o)return}const o={page:this.pagination.page,pageSize:this.pagination.pageSize};this.filterDocumentTypeIndex>0&&(o.documentType=this.documentTypeOptions[this.filterDocumentTypeIndex].value),this.filterStatusIndex>0&&(o.status=this.statusOptions[this.filterStatusIndex].value),console.log("📄 加载历史记录，请求参数:",o);const a=await l(o);if(a){if(this.records=a.records||[],this.pagination={...this.pagination,...a.pagination},console.log("📄 历史记录加载成功:",{recordsCount:this.records.length,pagination:this.pagination,responseData:a}),console.log("🔍 数据结构详细分析:"),console.log("  - response.records 长度:",a.records?a.records.length:"undefined"),console.log("  - records 实际内容:",this.records),console.log("  - pagination 数据:",this.pagination),this.records.length>0){console.log("📋 第一条记录结构:",this.records[0]),console.log("📋 记录字段:",Object.keys(this.records[0]));const e=this.records[0];console.log("🔍 关键字段检查:"),console.log("  - status:",e.status),console.log("  - taskId:",e.taskId),console.log("  - id:",e.id),console.log("  - fileName:",e.fileName),console.log("  - documentType:",e.documentType);const t="completed"!==e.status;console.log("  - 查看结果按钮是否禁用:",t),console.log('  - 判断条件: record.status !== "completed"'),console.log("  - 实际状态值:",JSON.stringify(e.status))}0===this.records.length&&(console.log("📋 当前用户暂无历史记录"),console.log("🔍 可能原因："),console.log("  1. 用户首次使用，尚未上传和处理文档"),console.log("  2. 历史记录已被删除"),console.log("  3. 用户权限限制"),console.log("  4. 数据库中确实没有该用户的记录"))}}catch(o){console.error("❌ 加载历史记录失败:",o),o.message&&(o.message.includes("401")||o.message.includes("Unauthorized")||o.message.includes("JWT")||o.message.includes("Token"))?(console.error("🔐 认证错误，清理认证状态并跳转登录"),e("token"),e("refreshToken"),e("isLoggedIn"),e("userInfo"),e("loginTime"),t({title:"认证失败",content:"登录状态已失效，请重新登录。\n\n可能原因：\n• JWT Token过期\n• Token格式错误\n• 用户权限不匹配",showCancel:!1,confirmText:"重新登录",success:()=>{s({url:"/pages/login/login"})}})):_(o,{page:"history",action:"loadHistory"})}finally{this.isLoading=!1}},async applyFilters(){this.pagination.page=1,await this.loadHistory()},async changePage(e){this.pagination.page=e,await this.loadHistory()},onDocumentTypeChange(e){this.filterDocumentTypeIndex=e.detail.value},onStatusChange(e){this.filterStatusIndex=e.detail.value},viewRecordDetail(e){"completed"===e.status?this.viewResults(e):p({title:"该记录尚未处理完成",icon:"none"})},async viewResults(e){console.log("🔍 点击查看结果，记录信息:",e),console.log("🔍 记录状态:",e.status),console.log("🔍 记录的extractionTasks:",e.extractionTasks);let t=null;e.extractionTasks&&e.extractionTasks.length>0?(t=e.extractionTasks[0].id,console.log("📡 使用extractionTasks[0].id作为taskId:",t)):(t=e.taskId||e.id,console.log("📡 回退使用record.taskId/id作为taskId:",t));try{if(f({title:"加载结果中...",mask:!0}),!t)throw new Error("无法获取任务ID，record.extractionTasks[0].id、record.taskId和record.id都为空");console.log("📡 调用getHistoryResultsApi，参数:",e.id);const s=await T(e.id);if(!s)throw new Error("无法获取提取结果");{console.log("📥 从API获取的原始结果:",s),console.log("📥 原始结果的data字段:",s.data),console.log("📥 原始结果的result字段:",s.result),console.log("📥 原始结果的extractedData字段:",s.extractedData),console.log("📥 原始结果完整结构:",JSON.stringify(s,null,2));const o={id:s.id||t,taskId:s.taskId||t,documentId:s.documentId||e.id,status:s.status||"COMPLETED",progress:100,processingTime:s.processingTime||e.processingTime||0,currentStep:"completed",extractedData:s.extractedData||{},extractionSummary:s.extractionSummary||{totalFields:this.getFixedTotalFieldsByType(e.documentType),extractedFields:e.extractedFields||e.extractedFieldsCount||0,documentType:e.documentType,processingTime:e.processingTime||0,averageConfidence:.92,extractionRate:e.extractionRate||0},qualityMetrics:s.qualityMetrics||{averageConfidence:.92,fieldCoverage:e.extractionRate||0,processingTime:e.processingTime||0},documentType:e.documentType,fileName:e.fileName,createdAt:s.createdAt||e.createdAt,completedAt:s.completedAt||e.completedAt||e.updatedAt};console.log("✅ 构建完整结果数据（与上传页面格式一致）:",o),console.log("🔍 extractedData结构:",o.extractedData),y("currentExtractionResults",o),y("currentTaskId",t),h(),k({url:"/pages/results/results"})}}catch(s){h(),console.error("❌ 加载提取结果失败:",s);const o=t||e.taskId||e.id;o?(console.log("🔄 尝试通过URL参数传递taskId:",o),y("currentTaskId",o),k({url:"/pages/results/results"}),p({title:"正在重新加载结果...",icon:"loading",duration:2e3})):p({title:"无法获取任务ID，无法加载结果",icon:"error",duration:3e3})}},async deleteRecord(e){try{const s=Date.now(),o=6e4;if(s-this.deleteOperations.lastDeleteTime>o&&(this.deleteOperations.count=0),this.deleteOperations.count>=this.deleteOperations.maxDeletesPerMinute)return void t({title:"🛡️ 安全保护",content:`为了防止误操作，每分钟最多只能删除 ${this.deleteOperations.maxDeletesPerMinute} 个记录。\n\n请稍后再试，或联系管理员批量删除。`,showCancel:!1,confirmText:"我知道了"});if(!(await new Promise(s=>{t({title:"⚠️ 危险操作",content:`确定要删除文档"${e.fileName}"的处理记录吗？\n\n⚠️ 此操作将永久删除：\n• 提取结果数据\n• 处理历史记录\n• 相关统计信息\n\n删除后无法恢复！`,confirmText:"继续",cancelText:"取消",confirmColor:"#ff4757",success:e=>{s(e.confirm)}})})))return;if(!(await new Promise(s=>{t({title:"🔒 最终确认",content:`请再次确认删除操作\n\n文档名称：${e.fileName}\n任务ID：${e.taskId||e.id}\n\n这是最后的确认机会！`,confirmText:"确认删除",cancelText:"我再想想",confirmColor:"#ff4757",success:e=>{s(e.confirm)}})})))return;f({title:"删除中...",mask:!0});const a=e.id;console.log("🗑️ 删除记录，historyId:",a,"记录信息:",e),await m(a);const n=this.records.findIndex(e=>e.id===a);n>-1&&(this.records.splice(n,1),this.pagination.total=Math.max(0,this.pagination.total-1),this.pagination.totalPages=Math.ceil(this.pagination.total/this.pagination.pageSize)),this.deleteOperations.count++,this.deleteOperations.lastDeleteTime=Date.now(),h(),p({title:`历史记录删除成功 (${this.deleteOperations.count}/${this.deleteOperations.maxDeletesPerMinute})`,icon:"success"}),console.log("🔄 删除成功，刷新历史记录列表..."),setTimeout(()=>{this.loadHistory()},500)}catch(s){h(),console.error("删除记录失败:",s),p({title:"删除失败",icon:"error"})}},getStatusText:e=>({completed:"已完成",processing:"处理中",failed:"失败",pending:"等待中"}[e]||"未知"),getDocumentTypeLabel:e=>({fund_contract:"基金合同",custody_agreement:"托管协议",prospectus:"招募说明书"}[e]||"未知类型"),formatTime(e){try{return new Date(e).toLocaleString("zh-CN",{year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit"})}catch(t){return e}},getExtractedFieldsDisplay(e){return`${e.extractedFields||e.extractedFieldsCount||e.fieldsExtracted||0}/${this.getFixedTotalFieldsByType(e.documentType)}`},getProcessingTimeDisplay(e){let t=e.processingTime||e.processTime||e.duration||0;return t>1e3&&(t=Math.round(t/1e3)),t>0?`${t}秒`:"未知"},getFixedTotalFieldsByType:e=>"fund_contract"===e?44:22,handleTranslationPluginIssues(){try{"undefined"!=typeof window&&(window.immersiveTranslate||document.querySelector("[data-immersive-translate]")||document.querySelector(".immersive-translate"))&&(console.warn("⚠️ 检测到沉浸式翻译插件，可能影响页面正常运行"),console.log("💡 建议：在此页面暂时关闭翻译插件以避免干扰"))}catch(e){}},preventTranslationInterference(){try{if("undefined"!=typeof document){document.querySelectorAll(".records-section, .pagination-section, .filter-section").forEach(e=>{e.setAttribute("translate","no"),e.setAttribute("data-immersive-translate-walked","true")})}}catch(e){}},testViewResults(e){var s;console.log("🧪 测试按钮点击 - 记录:",e),console.log("🧪 按钮是否应该禁用:","completed"!==e.status),p({title:"按钮点击有效！",icon:"success"}),"completed"===(null==(s=e.status)?void 0:s.toLowerCase())?this.viewResults(e):t({title:"无法查看结果",content:`记录状态为: ${e.status}\n只有状态为"completed"的记录才能查看结果`,showCancel:!1})},addTestRecord(){const e={id:"test-001",taskId:"test-task-001",fileName:"测试文档.pdf",status:"completed",documentType:"custody_agreement",extractedFields:19,extractedFieldsCount:19,processingTime:2.8,createdAt:(new Date).toISOString()};this.records.push(e),console.log("✅ 已添加测试记录:",e),p({title:"测试记录已添加",icon:"success"})}},mounted(){this.preventTranslationInterference()},onLoad(){g()&&(this.handleTranslationPluginIssues(),this.loadHistory())}},[["render",function(e,t,s,o,a,n){const l=I("Sidebar"),i=w,c=x,r=L,g=O;return b(),d(c,{class:"web-layout"},{default:u(()=>[v(l),v(c,{class:"web-content"},{default:u(()=>[v(c,{class:"content-wrapper"},{default:u(()=>[v(c,{class:"page-header fade-in-up"},{default:u(()=>[v(i,{class:"page-title"},{default:u(()=>[D("处理历史")]),_:1}),v(i,{class:"page-subtitle"},{default:u(()=>[D("查看文档处理历史记录和统计信息")]),_:1})]),_:1}),v(c,{class:"history-container"},{default:u(()=>[v(c,{class:"filter-section"},{default:u(()=>[v(c,{class:"filter-card"},{default:u(()=>[v(c,{class:"filter-row"},{default:u(()=>[v(c,{class:"filter-group"},{default:u(()=>[v(i,{class:"filter-label"},{default:u(()=>[D("文档类型")]),_:1}),v(r,{mode:"selector",value:a.filterDocumentTypeIndex,range:a.documentTypeOptions,"range-key":"label",onChange:n.onDocumentTypeChange},{default:u(()=>[v(c,{class:"picker-view"},{default:u(()=>[v(i,{class:"picker-text"},{default:u(()=>[D(S(a.documentTypeOptions[a.filterDocumentTypeIndex].label),1)]),_:1}),v(i,{class:"picker-arrow"},{default:u(()=>[D("▼")]),_:1})]),_:1})]),_:1},8,["value","range","onChange"])]),_:1}),v(c,{class:"filter-group"},{default:u(()=>[v(i,{class:"filter-label"},{default:u(()=>[D("状态")]),_:1}),v(r,{mode:"selector",value:a.filterStatusIndex,range:a.statusOptions,"range-key":"label",onChange:n.onStatusChange},{default:u(()=>[v(c,{class:"picker-view"},{default:u(()=>[v(i,{class:"picker-text"},{default:u(()=>[D(S(a.statusOptions[a.filterStatusIndex].label),1)]),_:1}),v(i,{class:"picker-arrow"},{default:u(()=>[D("▼")]),_:1})]),_:1})]),_:1},8,["value","range","onChange"])]),_:1}),v(c,{class:"filter-group"},{default:u(()=>[v(g,{class:"filter-btn",onClick:n.applyFilters,disabled:a.isLoading},{default:u(()=>[v(i,{class:"btn-text"},{default:u(()=>[D(S(a.isLoading?"查询中...":"查询"),1)]),_:1})]),_:1},8,["onClick","disabled"])]),_:1})]),_:1})]),_:1})]),_:1}),v(c,{class:"records-section",translate:"no"},{default:u(()=>[a.isLoading?(b(),d(c,{key:0,class:"loading-placeholder"},{default:u(()=>[v(i,{class:"loading-text"},{default:u(()=>[D("正在加载历史记录...")]),_:1})]),_:1})):0===a.records.length?(b(),d(c,{key:1,class:"empty-placeholder"},{default:u(()=>[v(i,{class:"empty-icon"},{default:u(()=>[D("📄")]),_:1}),v(i,{class:"empty-text"},{default:u(()=>[D("暂无处理记录")]),_:1}),v(i,{class:"empty-desc"},{default:u(()=>[D("开始上传文档来创建处理记录")]),_:1}),v(c,{class:"data-recovery-tip"},{default:u(()=>[v(i,{class:"recovery-title"},{default:u(()=>[D("💡 数据恢复提示")]),_:1}),v(i,{class:"recovery-desc"},{default:u(()=>[D("如果您之前有处理记录但现在看不到，可能是因为：")]),_:1}),v(i,{class:"recovery-item"},{default:u(()=>[D("• 记录被意外删除")]),_:1}),v(i,{class:"recovery-item"},{default:u(()=>[D("• 筛选条件过于严格")]),_:1}),v(i,{class:"recovery-item"},{default:u(()=>[D("• 网络连接问题")]),_:1}),v(i,{class:"recovery-action"},{default:u(()=>[D("请尝试刷新页面或联系管理员恢复数据")]),_:1})]),_:1}),"development"===e.$options.name?(b(),d(c,{key:0,class:"debug-section"},{default:u(()=>[v(i,{class:"debug-title"},{default:u(()=>[D("🔧 调试模式")]),_:1}),v(g,{class:"debug-btn",onClick:n.addTestRecord},{default:u(()=>[D("添加测试记录")]),_:1},8,["onClick"])]),_:1})):C("",!0)]),_:1})):(b(),d(c,{key:2,class:"records-list"},{default:u(()=>[(b(!0),P(A,null,R(a.records,e=>(b(),d(c,{class:"record-card",key:e.taskId,onClick:t=>n.viewRecordDetail(e)},{default:u(()=>[v(c,{class:"record-header"},{default:u(()=>[v(c,{class:"record-title"},{default:u(()=>[v(i,{class:"file-name"},{default:u(()=>[D(S(e.fileName),1)]),_:2},1024),v(c,{class:$(["status-badge",e.status])},{default:u(()=>[v(i,{class:"status-text"},{default:u(()=>[D(S(n.getStatusText(e.status)),1)]),_:2},1024)]),_:2},1032,["class"])]),_:2},1024),v(i,{class:"record-time"},{default:u(()=>[D(S(n.formatTime(e.createdAt)),1)]),_:2},1024)]),_:2},1024),v(c,{class:"record-content"},{default:u(()=>[v(c,{class:"record-info"},{default:u(()=>[v(c,{class:"info-item info-type"},{default:u(()=>[v(i,{class:"info-label"},{default:u(()=>[D("文档类型")]),_:1}),v(i,{class:"info-value"},{default:u(()=>[D(S(n.getDocumentTypeLabel(e.documentType)),1)]),_:2},1024)]),_:2},1024),v(c,{class:"info-item info-fields"},{default:u(()=>[v(i,{class:"info-label"},{default:u(()=>[D("提取字段")]),_:1}),v(i,{class:"info-value"},{default:u(()=>[D(S(n.getExtractedFieldsDisplay(e)),1)]),_:2},1024)]),_:2},1024),v(c,{class:"info-item info-time"},{default:u(()=>[v(i,{class:"info-label"},{default:u(()=>[D("处理时间")]),_:1}),v(i,{class:"info-value"},{default:u(()=>[D(S(n.getProcessingTimeDisplay(e)),1)]),_:2},1024)]),_:2},1024)]),_:2},1024),v(c,{class:"record-actions"},{default:u(()=>{var t;return[v(g,{class:"action-btn view-btn",onClick:F(t=>n.viewResults(e),["stop"]),disabled:"completed"!==(null==(t=e.status)?void 0:t.toLowerCase())},{default:u(()=>[v(i,{class:"btn-text"},{default:u(()=>[D("查看结果")]),_:1})]),_:2},1032,["onClick","disabled"]),v(g,{class:"action-btn delete-btn",onClick:F(t=>n.deleteRecord(e),["stop"])},{default:u(()=>[v(i,{class:"btn-text"},{default:u(()=>[D("删除")]),_:1})]),_:2},1032,["onClick"])]}),_:2},1024)]),_:2},1024)]),_:2},1032,["onClick"]))),128))]),_:1}))]),_:1}),a.pagination.totalPages>1?(b(),d(c,{key:0,class:"pagination-section",translate:"no"},{default:u(()=>[v(c,{class:"pagination"},{default:u(()=>[v(g,{class:"page-btn",disabled:a.pagination.page<=1,onClick:t[0]||(t[0]=e=>n.changePage(a.pagination.page-1))},{default:u(()=>[v(i,{class:"btn-text"},{default:u(()=>[D("上一页")]),_:1})]),_:1},8,["disabled"]),v(c,{class:"page-info"},{default:u(()=>[v(i,{class:"page-text"},{default:u(()=>[D(S(a.pagination.page)+" / "+S(a.pagination.totalPages),1)]),_:1})]),_:1}),v(g,{class:"page-btn",disabled:a.pagination.page>=a.pagination.totalPages,onClick:t[1]||(t[1]=e=>n.changePage(a.pagination.page+1))},{default:u(()=>[v(i,{class:"btn-text"},{default:u(()=>[D("下一页")]),_:1})]),_:1},8,["disabled"])]),_:1})]),_:1})):C("",!0)]),_:1})]),_:1})]),_:1})]),_:1})}],["__scopeId","data-v-767f0e42"]]);export{M as default};
