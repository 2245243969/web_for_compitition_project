import{_ as s,S as e,c as l,w as a,D as o,g as i,Q as t,R as n,T as r,y as c,z as d,U as f,s as u,V as g,W as m,X as p,I as h,r as w,Y as b,i as _,j as P,o as C,k as y,l as k,m as G,E as U,Z as V,p as M,G as x,F as A,t as F,q as v,u as K}from"./index-CKATG7UM.js";const N=s({components:{Sidebar:e},data:()=>({userProfile:{username:"",email:""},originalProfile:{},isEditingProfile:!1,isSaving:!1,passwordForm:{currentPassword:"",newPassword:"",confirmPassword:""},showCurrentPassword:!1,showNewPassword:!1,showConfirmPassword:!1,isChangingPassword:!1,globalModelConfig:{modelName:"",apiKey:"",baseUrl:""},currentGlobalConfig:{has_global_config:!1,config:{}},modelPresets:[{name:"deepseek-chat",label:"DeepSeek Chat"},{name:"deepseek-reasoner",label:"DeepSeek Reasoner"},{name:"kimi-k2-0905-preview",label:"Kimi K2 0905 Preview"},{name:"kimi-k2-turbo-preview",label:"Kimi K2 Turbo Preview"},{name:"ep-20241206172706-5hqf9",label:"豆包 智能文档分析模型"},{name:"ep-20241127152712-ppt9z",label:"豆包 通用模型"}],showGlobalApiKey:!1,isSavingGlobal:!1,isTestingGlobal:!1,isClearingGlobal:!1,apiSettings:{apiKey:"",baseUrl:"",timeout:60},showApiKey:!1,isTesting:!1,testResult:null}),computed:{isGlobalConfigValid(){return this.globalModelConfig&&this.globalModelConfig.modelName&&this.globalModelConfig.modelName.trim()&&this.globalModelConfig.apiKey&&this.globalModelConfig.apiKey.trim()},isPasswordFormValid(){return this.passwordForm.currentPassword&&this.passwordForm.newPassword&&this.passwordForm.confirmPassword&&this.passwordForm.newPassword===this.passwordForm.confirmPassword&&this.passwordForm.newPassword.length>=6}},methods:{startEditProfile(){this.isEditingProfile=!0,this.originalProfile={...this.userProfile}},cancelEditProfile(){this.isEditingProfile=!1,this.userProfile={...this.originalProfile}},async saveProfile(){this.isSaving=!0;try{if(!this.userProfile.username.trim())throw new Error("用户名不能为空");if(!this.userProfile.email.trim())throw new Error("邮箱不能为空");await this.updateUserProfile({username:this.userProfile.username,email:this.userProfile.email}),u({title:"信息保存成功",icon:"success"}),this.isEditingProfile=!1}catch(s){console.error("保存用户信息失败:",s),u({title:s.message||"保存失败",icon:"none"})}finally{this.isSaving=!1}},async updateUserProfile(s){try{console.log("📝 开始更新用户信息:",s);const e={firstName:s.username,lastName:"",email:s.email,phone:"",company:"",settings:{},bio:""},l=await b(e);if(console.log("📥 更新用户信息API响应:",l),l&&l.user){const e={...this.userProfile,username:s.username,email:s.email};return this.userProfile=e,r(e),console.log("✅ 用户信息更新成功"),l}throw new Error("更新用户信息失败")}catch(e){throw console.error("❌ 更新用户信息失败:",e),e}},async changeUserPassword(s,e,l){try{console.log("🔐 开始修改密码");const a={currentPassword:s,newPassword:e,confirmPassword:l},o=await p(a);return console.log("🔄 密码修改成功，为了安全需要重新登录"),h("token"),h("refreshToken"),h("userInfo"),h("isLoggedIn"),h("loginTime"),d({title:"密码修改成功",content:"为了安全，请重新登录",showCancel:!1,success:()=>{w({url:"/pages/login/login"})}}),console.log("✅ 密码修改成功"),o}catch(a){throw console.error("❌ 密码修改失败:",a),a}},async updateUsername(s){return await this.updateUserProfile({username:s,email:this.userProfile.email})},async updateEmail(s){return await this.updateUserProfile({username:this.userProfile.username,email:s})},async updateUsernameAndEmail(s,e){return await this.updateUserProfile({username:s,email:e})},async quickUpdateUsername(){try{const s=await new Promise(s=>{d({title:"更新用户名",placeholderText:"请输入新的用户名",editable:!0,success:s})});s.confirm&&s.content&&s.content.trim()&&(await this.updateUsername(s.content.trim()),u({title:"用户名更新成功",icon:"success"}))}catch(s){u({title:s.message||"更新失败",icon:"none"})}},async quickUpdateEmail(){try{const s=await new Promise(s=>{d({title:"更新邮箱",placeholderText:"请输入新的邮箱地址",editable:!0,success:s})});if(s.confirm&&s.content&&s.content.trim()){if(!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(s.content.trim()))throw new Error("请输入有效的邮箱地址");await this.updateEmail(s.content.trim()),u({title:"邮箱更新成功",icon:"success"})}}catch(s){u({title:s.message||"更新失败",icon:"none"})}},toggleCurrentPasswordVisibility(){this.showCurrentPassword=!this.showCurrentPassword},toggleNewPasswordVisibility(){this.showNewPassword=!this.showNewPassword},toggleConfirmPasswordVisibility(){this.showConfirmPassword=!this.showConfirmPassword},async handleChangePassword(){if(this.isPasswordFormValid){this.isChangingPassword=!0;try{await this.changeUserPassword(this.passwordForm.currentPassword,this.passwordForm.newPassword,this.passwordForm.confirmPassword)}catch(s){u({title:s.message||"密码修改失败",icon:"none"})}finally{this.isChangingPassword=!1,this.passwordForm={currentPassword:"",newPassword:"",confirmPassword:""}}}else this.passwordForm.newPassword!==this.passwordForm.confirmPassword?u({title:"两次输入的密码不一致",icon:"none"}):this.passwordForm.newPassword.length<6?u({title:"密码长度至少6位",icon:"none"}):u({title:"请填写完整信息",icon:"none"})},selectGlobalPresetModel(s){this.globalModelConfig||(this.globalModelConfig={modelName:"",apiKey:"",baseUrl:""}),this.globalModelConfig.modelName=s;this.modelPresets.find(e=>e.name===s)&&!this.globalModelConfig.baseUrl&&(s.startsWith("deepseek-")?this.globalModelConfig.baseUrl="https://api.deepseek.com":s.startsWith("kimi-")?this.globalModelConfig.baseUrl="https://api.moonshot.cn/v1":s.startsWith("ep-")&&(this.globalModelConfig.baseUrl="https://ark.cn-beijing.volces.com/api/v3"))},toggleGlobalApiKeyVisibility(){this.showGlobalApiKey=!this.showGlobalApiKey},async saveGlobalConfig(){if(this.isGlobalConfigValid)try{this.isSavingGlobal=!0;const s={model_name:this.globalModelConfig.modelName,api_key:this.globalModelConfig.apiKey,base_url:this.globalModelConfig.baseUrl||""};await g(s),u({title:"全局配置保存成功",icon:"success"}),await this.loadGlobalConfig()}catch(s){console.error("保存全局配置失败:",s),u({title:s.message||"保存失败",icon:"none"})}finally{this.isSavingGlobal=!1}else u({title:"请填写完整的配置信息",icon:"none"})},async testGlobalConfig(){if(this.isGlobalConfigValid)try{this.isTestingGlobal=!0;const s={model_name:this.globalModelConfig.modelName,api_key:this.globalModelConfig.apiKey,base_url:this.globalModelConfig.baseUrl||""};await g(s),await m(),u({title:"连接测试成功",icon:"success"}),await this.loadGlobalConfig()}catch(s){console.error("测试连接失败:",s),u({title:s.message||"连接测试失败",icon:"none"})}finally{this.isTestingGlobal=!1}else u({title:"请先填写完整配置",icon:"none"})},async clearGlobalConfig(){try{if(!(await new Promise(s=>{d({title:"确认清除",content:"确定要清除全局配置吗？清除后需要重新设置。",success:s})})).confirm)return;this.isClearingGlobal=!0,await f(),this.globalModelConfig={modelName:"",apiKey:"",baseUrl:""},u({title:"配置已清除",icon:"success"}),await this.loadGlobalConfig()}catch(s){console.error("清除配置失败:",s),u({title:s.message||"清除失败",icon:"none"})}finally{this.isClearingGlobal=!1}},showApiHelp(){d({title:"API密钥说明",content:"请从您的AI服务提供商获取API密钥：\n• OpenAI: platform.openai.com\n• Claude: console.anthropic.com\n• Gemini: ai.google.dev\n\n密钥将安全存储在本地",showCancel:!1,confirmText:"知道了"})},async loadGlobalConfig(){try{this.globalModelConfig||(this.globalModelConfig={modelName:"",apiKey:"",baseUrl:""});const s=await c();console.log("🔍 全局配置API响应:",s),s?(this.currentGlobalConfig={has_global_config:s.has_global_config||!1,config:s.config||{}},s.has_global_config&&s.config&&(this.globalModelConfig.modelName=s.config.model_name||"",this.globalModelConfig.baseUrl=s.config.base_url||"",this.globalModelConfig.apiKey="")):this.currentGlobalConfig={has_global_config:!1,config:{}},console.log("✅ 全局配置加载完成:",this.currentGlobalConfig)}catch(s){console.error("加载全局配置失败:",s),this.currentGlobalConfig={has_global_config:!1,config:{}},this.globalModelConfig||(this.globalModelConfig={modelName:"",apiKey:"",baseUrl:""})}},async loadUserProfile(){try{const e=t();e&&(this.userProfile={username:e.username||"",email:e.email||""});try{const s=await n();(null==s?void 0:s.user)&&(this.userProfile={username:s.user.username||"",email:s.user.email||""},r(this.userProfile))}catch(s){console.warn("从服务器获取用户信息失败，使用本地缓存:",s)}}catch(s){console.error("加载用户信息失败:",s)}},async loadSettings(){try{const s=i("apiSettings");s&&(this.apiSettings={...this.apiSettings,...s})}catch(s){console.error("加载设置失败:",s)}}},onLoad(){o()&&(this.loadUserProfile(),this.loadSettings(),this.loadGlobalConfig())}},[["render",function(s,e,o,i,t,n){const r=P("Sidebar"),c=k,d=_,f=V,u=x;return C(),l(d,{class:"web-layout"},{default:a(()=>[y(r),y(d,{class:"web-content"},{default:a(()=>[y(d,{class:"content-wrapper"},{default:a(()=>[y(d,{class:"page-header fade-in-up"},{default:a(()=>[y(c,{class:"page-title"},{default:a(()=>[G("用户设置")]),_:1}),y(c,{class:"page-subtitle"},{default:a(()=>[G("管理您的个人信息、模型配置和API设置")]),_:1})]),_:1}),y(d,{class:"settings-container"},{default:a(()=>[y(d,{class:"settings-section"},{default:a(()=>[y(d,{class:"section-header"},{default:a(()=>[y(c,{class:"section-title"},{default:a(()=>[G("👤 个人信息")]),_:1})]),_:1}),y(d,{class:"settings-card"},{default:a(()=>[y(d,{class:"info-section"},{default:a(()=>[y(d,{class:"form-group"},{default:a(()=>[y(c,{class:"form-label"},{default:a(()=>[G("用户名")]),_:1}),y(f,{class:"form-input",type:"text",placeholder:"请输入用户名",modelValue:t.userProfile.username,"onUpdate:modelValue":e[0]||(e[0]=s=>t.userProfile.username=s),disabled:!t.isEditingProfile},null,8,["modelValue","disabled"])]),_:1}),y(d,{class:"form-group"},{default:a(()=>[y(c,{class:"form-label"},{default:a(()=>[G("邮箱地址")]),_:1}),y(f,{class:"form-input",type:"email",placeholder:"请输入邮箱地址",modelValue:t.userProfile.email,"onUpdate:modelValue":e[1]||(e[1]=s=>t.userProfile.email=s),disabled:!t.isEditingProfile},null,8,["modelValue","disabled"])]),_:1}),y(d,{class:"form-actions"},{default:a(()=>[t.isEditingProfile?(C(),M(A,{key:1},[y(u,{class:"action-btn success",onClick:n.saveProfile,disabled:t.isSaving},{default:a(()=>[y(c,{class:"btn-text"},{default:a(()=>[G(F(t.isSaving?"保存中...":"保存"),1)]),_:1})]),_:1},8,["onClick","disabled"]),y(u,{class:"action-btn outline",onClick:n.cancelEditProfile},{default:a(()=>[y(c,{class:"btn-text"},{default:a(()=>[G("取消")]),_:1})]),_:1},8,["onClick"])],64)):(C(),l(u,{key:0,class:"action-btn primary",onClick:n.startEditProfile},{default:a(()=>[y(c,{class:"btn-text"},{default:a(()=>[G("编辑信息")]),_:1})]),_:1},8,["onClick"]))]),_:1}),t.isEditingProfile?U("",!0):(C(),l(d,{key:0,class:"quick-actions"},{default:a(()=>[y(c,{class:"quick-title"},{default:a(()=>[G("快速更新：")]),_:1}),y(d,{class:"quick-buttons"},{default:a(()=>[y(u,{class:"quick-btn",onClick:n.quickUpdateUsername},{default:a(()=>[y(c,{class:"quick-icon"},{default:a(()=>[G("👤")]),_:1}),y(c,{class:"quick-text"},{default:a(()=>[G("更新用户名")]),_:1})]),_:1},8,["onClick"]),y(u,{class:"quick-btn",onClick:n.quickUpdateEmail},{default:a(()=>[y(c,{class:"quick-icon"},{default:a(()=>[G("📧")]),_:1}),y(c,{class:"quick-text"},{default:a(()=>[G("更新邮箱")]),_:1})]),_:1},8,["onClick"])]),_:1})]),_:1}))]),_:1})]),_:1})]),_:1}),y(d,{class:"settings-section"},{default:a(()=>[y(d,{class:"section-header"},{default:a(()=>[y(c,{class:"section-title"},{default:a(()=>[G("🔐 密码管理")]),_:1})]),_:1}),y(d,{class:"settings-card"},{default:a(()=>[y(d,{class:"password-section"},{default:a(()=>[y(d,{class:"form-group"},{default:a(()=>[y(c,{class:"form-label"},{default:a(()=>[G("当前密码")]),_:1}),y(d,{class:"password-input-wrapper"},{default:a(()=>[y(f,{class:"form-input",type:t.showCurrentPassword?"text":"password",placeholder:"请输入当前密码",modelValue:t.passwordForm.currentPassword,"onUpdate:modelValue":e[2]||(e[2]=s=>t.passwordForm.currentPassword=s)},null,8,["type","modelValue"]),y(c,{class:"password-toggle",onClick:n.toggleCurrentPasswordVisibility},{default:a(()=>[G(F(t.showCurrentPassword?"👁️":"👁️‍🗨️"),1)]),_:1},8,["onClick"])]),_:1})]),_:1}),y(d,{class:"form-group"},{default:a(()=>[y(c,{class:"form-label"},{default:a(()=>[G("新密码")]),_:1}),y(d,{class:"password-input-wrapper"},{default:a(()=>[y(f,{class:"form-input",type:t.showNewPassword?"text":"password",placeholder:"请输入新密码",modelValue:t.passwordForm.newPassword,"onUpdate:modelValue":e[3]||(e[3]=s=>t.passwordForm.newPassword=s)},null,8,["type","modelValue"]),y(c,{class:"password-toggle",onClick:n.toggleNewPasswordVisibility},{default:a(()=>[G(F(t.showNewPassword?"👁️":"👁️‍🗨️"),1)]),_:1},8,["onClick"])]),_:1})]),_:1}),y(d,{class:"form-group"},{default:a(()=>[y(c,{class:"form-label"},{default:a(()=>[G("确认新密码")]),_:1}),y(d,{class:"password-input-wrapper"},{default:a(()=>[y(f,{class:"form-input",type:t.showConfirmPassword?"text":"password",placeholder:"请再次输入新密码",modelValue:t.passwordForm.confirmPassword,"onUpdate:modelValue":e[4]||(e[4]=s=>t.passwordForm.confirmPassword=s)},null,8,["type","modelValue"]),y(c,{class:"password-toggle",onClick:n.toggleConfirmPasswordVisibility},{default:a(()=>[G(F(t.showConfirmPassword?"👁️":"👁️‍🗨️"),1)]),_:1},8,["onClick"])]),_:1})]),_:1}),y(d,{class:"password-actions"},{default:a(()=>[y(u,{class:"action-btn primary",onClick:n.handleChangePassword,disabled:!n.isPasswordFormValid||t.isChangingPassword},{default:a(()=>[y(c,{class:"btn-text"},{default:a(()=>[G(F(t.isChangingPassword?"修改中...":"修改密码"),1)]),_:1})]),_:1},8,["onClick","disabled"])]),_:1})]),_:1})]),_:1})]),_:1}),y(d,{class:"settings-section"},{default:a(()=>[y(d,{class:"section-header"},{default:a(()=>[y(c,{class:"section-title"},{default:a(()=>[G("🌐 全局模型配置")]),_:1})]),_:1}),y(d,{class:"settings-card"},{default:a(()=>[y(d,{class:"global-config-section"},{default:a(()=>[y(d,{class:"config-description"},{default:a(()=>[y(c,{class:"description-title"},{default:a(()=>[G("统一设置默认模型")]),_:1}),y(c,{class:"description-text"},{default:a(()=>[G("设置一次后，所有PDF处理都会默认使用此配置，无需重复配置")]),_:1})]),_:1}),y(d,{class:"model-selection"},{default:a(()=>[y(d,{class:"form-group"},{default:a(()=>[y(c,{class:"form-label"},{default:a(()=>[G("AI模型名称")]),_:1}),y(d,{class:"model-input-wrapper"},{default:a(()=>[y(f,{class:"form-input",type:"text",placeholder:"请输入模型名称，如：deepseek-chat, deepseek-reasoner",modelValue:t.globalModelConfig.modelName,"onUpdate:modelValue":e[5]||(e[5]=s=>t.globalModelConfig.modelName=s)},null,8,["modelValue"])]),_:1}),y(c,{class:"form-help"},{default:a(()=>[G("输入您要使用的AI模型的准确名称，这将在所有提取任务中使用")]),_:1})]),_:1}),y(d,{class:"model-presets"},{default:a(()=>[y(c,{class:"presets-title"},{default:a(()=>[G("常用模型：")]),_:1}),y(d,{class:"preset-buttons"},{default:a(()=>[(C(!0),M(A,null,v(t.modelPresets,s=>(C(),l(u,{class:K(["preset-btn",{active:t.globalModelConfig.modelName===s.name}]),key:s.name,onClick:e=>n.selectGlobalPresetModel(s.name)},{default:a(()=>[y(c,{class:"preset-name"},{default:a(()=>[G(F(s.label),1)]),_:2},1024),y(c,{class:"preset-model"},{default:a(()=>[G(F(s.name),1)]),_:2},1024)]),_:2},1032,["onClick","class"]))),128))]),_:1})]),_:1}),y(d,{class:"form-group"},{default:a(()=>[y(d,{class:"label-with-help"},{default:a(()=>[y(c,{class:"form-label"},{default:a(()=>[G("API密钥")]),_:1}),y(c,{class:"help-text",onClick:n.showApiHelp},{default:a(()=>[G("❓")]),_:1},8,["onClick"])]),_:1}),y(d,{class:"api-input-wrapper"},{default:a(()=>[y(f,{class:"form-input api-input",type:t.showGlobalApiKey?"text":"password",placeholder:"请输入您的API密钥",modelValue:t.globalModelConfig.apiKey,"onUpdate:modelValue":e[6]||(e[6]=s=>t.globalModelConfig.apiKey=s)},null,8,["type","modelValue"]),y(c,{class:"password-toggle",onClick:n.toggleGlobalApiKeyVisibility},{default:a(()=>[G(F(t.showGlobalApiKey?"👁️":"👁️‍🗨️"),1)]),_:1},8,["onClick"])]),_:1})]),_:1}),y(d,{class:"form-group"},{default:a(()=>[y(c,{class:"form-label"},{default:a(()=>[G("API Base URL（可选）")]),_:1}),y(f,{class:"form-input",type:"text",placeholder:"留空使用模型默认地址",modelValue:t.globalModelConfig.baseUrl,"onUpdate:modelValue":e[7]||(e[7]=s=>t.globalModelConfig.baseUrl=s)},null,8,["modelValue"]),y(c,{class:"form-help"},{default:a(()=>[G("留空将使用模型的默认API地址")]),_:1})]),_:1})]),_:1}),y(d,{class:"config-actions"},{default:a(()=>[y(u,{class:"config-btn primary",onClick:n.saveGlobalConfig,disabled:!n.isGlobalConfigValid||t.isSavingGlobal},{default:a(()=>[y(c,{class:"config-icon"},{default:a(()=>[G("⚙️")]),_:1}),y(c,{class:"config-text"},{default:a(()=>[G(F(t.isSavingGlobal?"保存中...":"保存全局配置"),1)]),_:1})]),_:1},8,["onClick","disabled"]),y(u,{class:"config-btn outline",onClick:n.testGlobalConfig,disabled:!n.isGlobalConfigValid||t.isTestingGlobal},{default:a(()=>[y(c,{class:"config-icon"},{default:a(()=>[G("🔗")]),_:1}),y(c,{class:"config-text"},{default:a(()=>[G(F(t.isTestingGlobal?"测试中...":"测试连接"),1)]),_:1})]),_:1},8,["onClick","disabled"]),t.currentGlobalConfig.has_global_config?(C(),l(u,{key:0,class:"config-btn danger",onClick:n.clearGlobalConfig,disabled:t.isClearingGlobal},{default:a(()=>[y(c,{class:"config-icon"},{default:a(()=>[G("🗑️")]),_:1}),y(c,{class:"config-text"},{default:a(()=>[G(F(t.isClearingGlobal?"清除中...":"清除配置"),1)]),_:1})]),_:1},8,["onClick","disabled"])):U("",!0)]),_:1}),y(d,{class:"config-tips"},{default:a(()=>[y(d,{class:"tip-item"},{default:a(()=>[y(c,{class:"tip-icon"},{default:a(()=>[G("💡")]),_:1}),y(c,{class:"tip-text"},{default:a(()=>[G("全局配置会应用到所有PDF提取任务")]),_:1})]),_:1}),y(d,{class:"tip-item"},{default:a(()=>[y(c,{class:"tip-icon"},{default:a(()=>[G("🔒")]),_:1}),y(c,{class:"tip-text"},{default:a(()=>[G("API密钥安全存储在服务器端")]),_:1})]),_:1}),y(d,{class:"tip-item"},{default:a(()=>[y(c,{class:"tip-icon"},{default:a(()=>[G("⚡")]),_:1}),y(c,{class:"tip-text"},{default:a(()=>[G("设置后无需在每次提取时重复配置")]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}),y(d,{class:"settings-section"},{default:a(()=>[y(d,{class:"section-header"},{default:a(()=>[y(c,{class:"section-title"},{default:a(()=>[G("📋 配置说明")]),_:1})]),_:1}),y(d,{class:"settings-card"},{default:a(()=>[y(d,{class:"info-section"},{default:a(()=>[y(d,{class:"info-card upgrade-notice"},{default:a(()=>[y(d,{class:"info-header"},{default:a(()=>[y(c,{class:"info-icon"},{default:a(()=>[G("🚀")]),_:1}),y(c,{class:"info-title"},{default:a(()=>[G("配置已统一")]),_:1})]),_:1}),y(d,{class:"info-content"},{default:a(()=>[y(c,{class:"info-text"},{default:a(()=>[G('现在所有的模型和API配置都已整合到上方的"全局模型配置"中。')]),_:1}),y(c,{class:"info-text"},{default:a(()=>[G("设置一次后，所有的文档处理任务都会自动使用该配置，无需重复设置。")]),_:1})]),_:1}),y(d,{class:"info-actions"},{default:a(()=>[y(c,{class:"info-action-text"},{default:a(()=>[G('请在上方"全局模型配置"中完成所有设置')]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})}],["__scopeId","data-v-4e911f9d"]]);export{N as default};
